newdat
newdat <- data.frame(Year = c(2014, 2014, 2014), Acres = c(.1, .2, .3), Latitude = c(31.96, 31.95, 31.93), Longitude = c(-85.45365, -85.45345, -85.45264))
for (i in 1: nrow(newdat)){
daymet <- download_daymet(site = "mysite",
lat = newdat$Latitude[i],
lon = newdat$Longitude[i],
start = newdat$Year[i] - 1,
end = newdat$Year[i],
internal = TRUE,
simplify = F) # returns tidy data!
newdat$JANMINTEMP[i] <- mean(daymet$data$tmin..deg.c.[366:396]) #my year
newdat$FEBMINTEMP[i] <- mean(daymet$data$tmin..deg.c.[397:424]) #my year
newdat$MARMINTEMP[i] <- mean(daymet$data$tmin..deg.c.[425:455]) #my year
newdat$Prcp[i] <- sum(daymet$data$prcp..mm.day.[365:730]) #my year
newdat$AUGMAXTEMP[i] <- mean(daymet$data$tmax..deg.c.[213:243]) #year BEFORE
}
newdat
head(meep)
rbind(newdat, meep)
?rbind
?merge
meee <- merge(newdat, meep, all.x = T)
meee <- merge(newdat, meep, all.x = T, all.y = T)
head(mee)
head(meee)
meee <- merge(newdat, meep, all = T)
head(meee)
View(newdat)
newdat <- data.frame(Year = c(2014, 2014, 2014), Acres = c(.1, .2, .3), Latitude = c(31.96, 31.95, 31.93), Longitude = c(-85.45365, -85.45345, -85.45264))
write.csv(newdat,"Practice_data.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('Shinyapp_files')
Outbreakdata <- read.csv("Outbreak_data.csv")
setwd("~/Desktop/U Georgia/INFO8000/Semester_Project/INFO8000/Semester_Project/Shinyapp_files")
Outbreakdata <- read.csv("Outbreak_data.csv")
m_gam1  <- gam((Acres^(1/3)) ~
s(AUGMAXTEMP) +
s(Prcp) +
s(FEBMAXTEMP) +
s(JANMAXTEMP,FEBMAXTEMP,MARMAXTEMP) +
s(Longitude, Latitude),
family = gaussian(),
data = Outbreakdata,
method = "REML")
saveRDS(m_gam1, "insect_predict.rds")
runApp()
runApp()
output$predicted <- renderText({paste("For coordinates (", input$lon, ",", input$lat, ")  Current Model Predicts a ", round(preds$fit, 2), "Acre Outbreak in", Fakedata$Year, "with SE = ", round(preds$se.fit,2), sep = "") })
paste("meep", "leep", sep = "")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/U Georgia/INFO8000/Semester_Project/INFO8000/Semester_Project/Shinyapp_files")
setwd("~/Downloads/gaplf2011lc_v30_lcc_9")
ga_lc3 <- raster("gaplf2011lc_v30_lcc_9.tif")
rc_9 <- reclassify(ga_lc3, c(-Inf,264,1, 264,Inf,0))
rc_9_2 <- aggregate(rc_9, fact = 10)
plot(rc_9_2)
writeRaster(rc_9_2, filename="section3.tif", overwrite=TRUE)
library(raster)
ga_lc3 <- raster("gaplf2011lc_v30_lcc_9.tif")
rc_9 <- reclassify(ga_lc3, c(-Inf,264,1, 264,Inf,0))
rc_9_2 <- aggregate(rc_9, fact = 10)
plot(rc_9_2)
writeRaster(rc_9_2, filename="section3.tif", overwrite=TRUE)
em = merge(extent(rc2),extent(rc_12_2), extent(rc_9_2))
plot(rc_9_2)
setwd("~/Downloads/gaplf2011lc_v30_lcc_1")
ga_lc4 <- raster("gaplf2011lc_v30_lcc_1.tif")
rc_1 <- reclassify(ga_lc4, c(-Inf,264,1, 264,Inf,0))
rc_1_2 <- aggregate(rc_1, fact = 10)
plot(rc_1_2)
writeRaster(rc_1_2, filename="section4.tif", overwrite=TRUE)
setwd("~/Desktop/U Georgia/INFO8000/Semester_Project/INFO8000/Semester_Project")
r1 <- raster("section1.tif")
r2 <- raster("section2.tif")
r3 <- raster("section3.tif")
r4 <- raster("section4.tif")
em = merge(extent(r1),extent(r2), extent(r3), extent(r4))
plot(em, type="n")
plot(r1,add=TRUE, legend=FALSE)
plot(r2, add=TRUE, legend=FALSE)
plot(r3, add=TRUE, legend=FALSE)
plot(r4, add=TRUE, legend=FALSE)
r_all <- merge(r1, r2, r3, r4)
r_all <- merge(r1, r2)
summary(r1)
r1
r_all <- merge(r1, r2, extent = em)
r_all <- stack(r1, r2, extent = em)
meep <- extend(r1, em)
plot(meep)
r1 <- extend(r1, em)
r2 <- extend(r2, em)
r3 <- extend(r3, em)
r4 <- extend(r4, em)
r_all <- stack(r1, r2, r3, r4)
extent(r1)
extent(r2)
extent(r3)
extent(r4)
plot(r1,add=TRUE, legend=FALSE)
plot(r2, add=TRUE, legend=FALSE)
plot(r3, add=TRUE, legend=FALSE)
plot(r4, add=TRUE, legend=FALSE)
em
str(em)
em@xmin <- -52000
em@xmax <- 1838445
em@ymin <- 261000
em@ymax <- 2395000
r1 <- extend(r1, em)
extent(r1)
r1 <- crop(extend(r1, em), em)
r1
?crop
r1 <- crop(extend(r1, em), r1)
r1
r1 <- crop(extend(r1, em), em)
all.equal(extent(r1), extent(3m))
all.equal(extent(r1), extent(em))
r1
r2
r2 <- crop(extend(r2, em), r1)
r2
r1
r3 <- crop(extend(r3, em), r1)
r4 <- crop(extend(r4, em), r1)
extent(r1)
extent(r2)
em
extent(r1) <- em
extent(r1)
extent(r1) <- extent(r2) <- extent(r3) <- extent(r4) <- em
r_all <- stack(r1, r2, r3, r4)
r1
r2
r1 <- raster("section1.tif")
r2 <- raster("section2.tif")
r3 <- raster("section3.tif")
r4 <- raster("section4.tif")
em = merge(extent(r1),extent(r2), extent(r3), extent(r4))
r2 <- resample(r2,r1)
r1
r2
r3 <- resample(r3,r1)
r4 <- resample(r4,r1)
r_all <- stack(r1, r2, r3, r4)
plot(r_all)
r_all2 <- aggregate(r_all, fact = 20)
plot(r_all2)
writeRaster(r_all2, filename="forest_cover.tif", overwrite=TRUE)
r <- raster("forest_cover.tif")
plot(r)
?writeRaster
writeRaster(r_all2, filename="forest_cover.tif", bylayer = F)
writeRaster(r_all2, filename="forest_cover.tif", bylayer = F, overwrite = T)
r <- raster("forest_cover.tif")
plot(r)
str(r)
r <- aggregate(r, fact = 20)
plot(r)
plot(r_all2)
meep <- merge(r_all2)
plot(Meep)
plot(meep)
meep
meep <- merge(r_all)
plot(meep)
r1 <- raster("section1.tif")
r2 <- raster("section2.tif")
r3 <- raster("section3.tif")
r4 <- raster("section4.tif")
em = merge(extent(r1),extent(r2), extent(r3), extent(r4))
em
plot(r2)
r2 <- resample(r2,em)
rr <- raster()
rr <- setExtent(rr, em)
r2 <- resample(r2,rr)
plot(r2)
r3 <- resample(r3,rr)
r1 <- resample(r1, rr)
r4 <- resample(r4,rr)
r_all <- stack(r1, r2, r3, r4)
r_all2 <- aggregate(r_all, fact = 20)
plot(r_all2)
plot(rr)
plot(em)
plot(em, type="n")
plot(r1,add=TRUE, legend=FALSE)
plot(r2, add=TRUE, legend=FALSE)
plot(r3, add=TRUE, legend=FALSE)
plot(r4, add=TRUE, legend=FALSE)
r_all <- stack(r1, r2, r3, r4)
#r_all2 <- aggregate(r_all, fact = 20)
plot(r_all)
#r_all2 <- aggregate(r_all, fact = 20)
meep <- merge(r_all)
plot(meep)
writeRaster(meep, filename="forest_cover.tif", bylayer = F, overwrite = T)
r <- raster("forest_cover.tif")
#r <- aggregate(r, fact = 20)
plot(r)
Out <- read.csv("Outbreak_data.csv")
write.csv(Outbreakdata, "Outbreak_data.csv")
Out <- read.csv("Outbreak_data.csv")
setwd("~/Desktop/U Georgia/INFO8000/Semester_Project/INFO8000/Semester_Project/Shinyapp_files")
Out <- read.csv("Outbreak_data.csv")
extract(r, Out))
extract(r, Out)
extract
?extract
Out$Forest <- extract(r, y = data.frame(long = Out$Longitude, lat = Out$Latitude))
Out$Forest
head(Out)
extract(r, y = data.frame(long = Out$Longitude, lat = Out$Latitude))
r
points(Out$Longitude, Out$Latitude)
coordinates(Out) <- ~Longitude+Latitude
proj4string(Out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
Out
plot(r)
points(Out)
plot(Out)
r
proj4string(r) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
r
plot(r)
plot(Out, add = T)
Out
r
plot(Out)
str(Out)
Out@coords
r <- raster("forest_cover.tif")
setwd("~/Desktop/U Georgia/INFO8000/Semester_Project/INFO8000/Semester_Project")
r <- raster("forest_cover.tif")
r
r <- spTransform(r, CRS("+proj=utm +zone=17 ellps=WGS84"))
rrrr <- projectRaster(r, Out)
Out
rrrr <- projectRaster(r, Out, crs = +proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0 )
rrrr <- projectRaster(r, Out, crs = "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0" )
rrrr <- projectRaster(r, crs = "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0" )
rrrr <- projectRaster(r, crs = "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
r
r <- raster("forest_cover.tif")
r
Out
setwd("~/Desktop/U Georgia/INFO8000/Semester_Project/INFO8000/Semester_Project/Shinyapp_files")
Out <- read.csv("Outbreak_data.csv")
coordinates(Out) <- ~Longitude+Latitude
Out
plot(Out)
plot(Out, legend = T)
r
Out <- read.csv("Outbreak_data.csv")
Out <- temp.out <-  read.csv("Outbreak_data.csv")
coordinates(temp.out) <- ~Longitude+Latitude
?spTransform
pts <- spTransform(temp.out,CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ")
)
coordinates(temp.out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
Out <- temp.out <-  read.csv("Outbreak_data.csv")
coordinates(temp.out) <- ~Longitude+Latitude
proj4string(temp.out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
pts <- spTransform(temp.out,CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
)
Out$Forest <-
extract(r, y = pts)
View(pts)
r
Out$Forest
Out <- temp.out <-  read.csv("Outbreak_data.csv")
coordinates(temp.out) <- ~Longitude+Latitude
proj4string(temp.out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
pts <- spTransform(temp.out,CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
ye <- extract(r, y = pts)
pts
temp.out[,c("Longitude", "Latitude")]
Out <- temp.out <-  read.csv("Outbreak_data.csv")
temp.out[,c("Longitude", "Latitude")]
temp.out <- temp.out[,c("Longitude", "Latitude")]
coordinates(temp.out) <- ~Longitude+Latitude
proj4string(temp.out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
pts <- spTransform(temp.out,CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
pts
plot(pts)
plot(r)
plot(pts, add = T)
temp.out
r
rrrrr <- projectRaster(from = r, crs = "+proj=utm +zone=19 +ellps=GRS80 +datum=NAD83 +units=m +no_defs")
rrrrr <- projectRaster(from = r, crs = "+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs")
r
proj4string(r) <- CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs")
r
plot(r)
rrrrr <- projectRaster(from = r, crs = "+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs")
plot(rrrrr)
points(temp.out)
pts <- spTransform(temp.out,CRS("+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))
plot(pts)
plot(rrrrr)
points(pts)
pts <- spTransform(temp.out,CRS("+proj=utm +zone=16 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))
points(pts)
r
rrrrr
pts
Out <- temp.out <-  read.csv("Outbreak_data.csv")
temp.out <- temp.out[,c("Longitude", "Latitude")]
coordinates(temp.out) <- ~Longitude+Latitude
proj4string(temp.out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
pts <- spTransform(temp.out,CRS("+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))
proj4string(temp.out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
Out <- temp.out <-  read.csv("Outbreak_data.csv")
temp.out <- temp.out[,c("Longitude", "Latitude")]
coordinates(temp.out) <- ~Longitude+Latitude
proj4string(temp.out) <-CRS ("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
pts <- spTransform(temp.out,CRS("+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))
pts
pts <- spTransform(temp.out,CRS("+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))r1
r1
r_all
meep
r
plot(r)
points(pts)
pts
em
yy <- em
yy@ymin <- 220000
yy@ymax <- 2594735
plot(yy, type = "n")
plot(r, add = T)
yy@ymax <- 4219169
plot(yy, type = "n")
yy@ymax <- 4219169
plot(r, add = T)
points(pts)
plot(yy, type = "n")
plot(rrrrr)
plot(yy, type = "n")
plot(rrrrr, add = T)
points(pts)
plot(rrrr)
plot(rrrrr)
points(Out)
points(temp.out)
plot(temp.out)
r <- raster("forest_cover.tif")
r
plot(r)
pts
rrrrr
summary(pts)
summary(rrrrr)
rrrrr
r
proj4string(r) <- CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=-96 +lon_0=23 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs +towgs84=0,0,0")
plot(r)
Rr <- projectRaster(r, crs ="+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs")
plot(Rr)
points(pts)
pts
Rr
spTransform()
?spTransform()
??spTransform()
Rr <- projectRaster(r, crs ="+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs", alignOnly = T)
plot(Rr)
r
plot(r)
pts
proj4string(r) <- CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs +towgs84=0,0,0")
Rr <- projectRaster(r, crs ="+proj=utm +zone=17 +ellps=GRS80 +datum=NAD83 +units=m +no_defs")
plot(Rr)
points(temp.out)
points(pts)
ye <- extract(r, y = pts)
ye
str(ye)
writeRaster(Rr, "SE_Forest.tif")
Out
Out$Forest <- extract(r, y = pts)
head(Out)
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMINTEMP,JANMINTEMP, MARMINTEMP)+
s(FEBMAXTEMP,JANMAXTEMP, MARMAXTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest)+
family = binomial(),
data = Outbreakdata,
method = "REML")
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMINTEMP,JANMINTEMP, MARMINTEMP)+
s(FEBMAXTEMP,JANMAXTEMP, MARMAXTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest)+
family = binomial(),
data = Outbreakdata,
method = "REML")
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMINTEMP,JANMINTEMP, MARMINTEMP)+
s(FEBMAXTEMP,JANMAXTEMP, MARMAXTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest),
family = binomial(),
data = Outbreakdata,
method = "REML")
# Required libraries
library(readr)
library(knitr)
library(daymetr)
library(raster)
library(lattice)
library(latticeExtra)
library(mgcv)
library(RCurl)
library(rgdal)
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMINTEMP,JANMINTEMP, MARMINTEMP)+
s(FEBMAXTEMP,JANMAXTEMP, MARMAXTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest),
family = binomial(),
data = Outbreakdata,
method = "REML")
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMINTEMP,JANMINTEMP, MARMINTEMP)+
s(FEBMAXTEMP,JANMAXTEMP, MARMAXTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest),
family = binomial(),
data = Out,
method = "REML")
head(Out)
Out$RISK <- ifelse(Out$Acres >5, 1, 0)
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMINTEMP,JANMINTEMP, MARMINTEMP)+
s(FEBMAXTEMP,JANMAXTEMP, MARMAXTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest),
family = binomial(),
data = Out,
method = "REML")
summary(m_gam1)
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMINTEMP,JANMINTEMP, MARMINTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest),
family = binomial(),
data = Out,
method = "REML")
summary(m_gam1)
m_gam1  <- gam(RISK ~
s(AUGMAXTEMP) +
s(FEBMAXTEMP,JANMAXTEMP, MARMAXTEMP)+
s(Longitude, Latitude) +
s(Prcp) + s(Forest),
family = binomial(),
data = Out,
method = "REML")
summary(m_gam1)
gDistance(pts, byid=T)
library(sp)
library(rgeos)
gDistance(pts, byid=T)
Out
d <- gDistance(pts, byid=T)
d
